<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.min.css" />
  <link rel="stylesheet" type="text/css" href="../public/stylesheets/timer.css">

  <title>Timer</title>
</head>
<body>

    <div class="timer">
        <div class="controls">
            <input id="duration" autocomplete="off" value="3" />
            <div>
                <button id="start"><i class="fas fa-play"></i></button>
                <button id="pause"><i class="fas fa-pause"></i></button>
            </div>
        </div>
    </div>


  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
  <script defer type="text/javascript" >

    class Timer {
        constructor(durationInput, startButton, pauseButton, callbacks) {
            this.durationInput = durationInput;
            this.startButton = startButton;
            this.pauseButton = pauseButton;
            if (callbacks) {
                this.onStart = callbacks.onStart;
                this.onTick = callbacks.onTick;
                this.onComplete = callbacks.onComplete;
            }

            this.startButton.addEventListener('click', this.start);
            this.pauseButton.addEventListener('click', this.pause);
            this.durationInput.addEventListener('click',this.pause);
        }

        start = () => {
            if (this.onStart) {
                this.onStart(this.timeRemaining);
            }
            this.tick();
            this.interval = setInterval(this.tick, 1000);
        };

        pause = () => {
            clearInterval(this.interval);
        };

        tick = () => {
            if (this.timeRemaining <= 0) {
                this.pause();
                if (this.onComplete) {
                    this.onComplete();
                }
            }
            else {
                if(this.timeRemaining-Math.floor(this.timeRemaining) > 0.60)
                    this.timeRemaining = Math.floor(this.timeRemaining)+0.60;

                if(this.timeRemaining === Math.floor(this.timeRemaining)){
                    this.timeRemaining--;
                    this.timeRemaining += 0.60;
                }

                this.timeRemaining = this.timeRemaining - 0.01;
                console.log(this.timeRemaining);
                if (this.onTick) {
                    this.onTick(this.timeRemaining);
                }
            }
        };

        get timeRemaining() {
            return parseFloat(this.durationInput.value);
        }

        set timeRemaining(time) {
            this.durationInput.value = time.toFixed(2);
        }
    }

    const durationInput = document.querySelector('#duration');
    const startButton = document.querySelector('#start');
    const pauseButton = document.querySelector('#pause');

    const timer = new Timer(durationInput, startButton, pauseButton, {
        onStart(totalDuration) {
            duration = totalDuration;
        },
        onTick(timeRemaining) {
        },
        onComplete() {
            alert("Timer Complete!");
        }
    });

  </script>
</body>
</html>